#!/usr/bin/env python3
"""
AI Voice launcher script
"""

import sys
import os
import asyncio
from pathlib import Path

# Add ai-agent directory to Python path
ai_agent_dir = Path(__file__).parent.parent
sys.path.insert(0, str(ai_agent_dir))

from stt.stt_adapter import STTAdapter
from tts.tts_adapter import TTSAdapter
from agent import NixOSAIAgent

async def voice_interaction():
    """Handle voice interaction"""
    agent = NixOSAIAgent()
    
    # Initialize voice components
    stt = STTAdapter(agent.config)
    tts = TTSAdapter(agent.config)
    
    print("üé§ Voice interaction started. Press Ctrl+C to exit.")
    print("Speak your command...")
    
    try:
        while True:
            # Record audio
            print("Listening...")
            audio_result = await stt.record_audio(duration=5.0)
            
            if not audio_result['success']:
                print(f"‚ùå Error recording audio: {audio_result['error']}")
                continue
            
            # Transcribe audio
            print("Transcribing...")
            transcription_result = await stt.transcribe_audio(audio_result['audio_data'])
            
            if not transcription_result['success']:
                print(f"‚ùå Error transcribing: {transcription_result['error']}")
                continue
            
            text = transcription_result['text']
            print(f"üéØ You said: {text}")
            
            if text.strip():
                # Process with AI agent
                response = await agent.process_message(text, "voice_user")
                
                # Speak response
                if response.get('message'):
                    print(f"ü§ñ AI: {response['message']}")
                    
                    # Speak the response
                    speak_result = await tts.speak_text(response['message'])
                    if not speak_result['success']:
                        print(f"‚ùå Error speaking: {speak_result['error']}")
                else:
                    print("‚ùå No response from AI agent")
            
            print("\n" + "="*50 + "\n")
            
    except KeyboardInterrupt:
        print("\nüëã Voice interaction stopped.")
    except Exception as e:
        print(f"‚ùå Error: {e}")

if __name__ == "__main__":
    asyncio.run(voice_interaction())
